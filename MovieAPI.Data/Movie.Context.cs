//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieAPI.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MovieEntities : DbContext
    {
        public MovieEntities()
            : base("name=MovieEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actor> Actors { get; set; }
        public virtual DbSet<ActorMovy> ActorMovies { get; set; }
        public virtual DbSet<Genre> Genres { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Movy> Movies { get; set; }
        public virtual DbSet<MoviesGenre> MoviesGenres { get; set; }
        public virtual DbSet<UserReview> UserReviews { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersRental> UsersRentals { get; set; }
        public virtual DbSet<UsersSession> UsersSessions { get; set; }
        public virtual DbSet<UsersSocialMedia> UsersSocialMedias { get; set; }
        public virtual DbSet<UsersTransaction> UsersTransactions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
    
        public virtual int pr_RegisterUser(string email, string salt, string hashedpassword, string network, string socialMediaAccessToken, string socialMediaUserId, string firstname, ObjectParameter userId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            var hashedpasswordParameter = hashedpassword != null ?
                new ObjectParameter("hashedpassword", hashedpassword) :
                new ObjectParameter("hashedpassword", typeof(string));
    
            var networkParameter = network != null ?
                new ObjectParameter("network", network) :
                new ObjectParameter("network", typeof(string));
    
            var socialMediaAccessTokenParameter = socialMediaAccessToken != null ?
                new ObjectParameter("socialMediaAccessToken", socialMediaAccessToken) :
                new ObjectParameter("socialMediaAccessToken", typeof(string));
    
            var socialMediaUserIdParameter = socialMediaUserId != null ?
                new ObjectParameter("socialMediaUserId", socialMediaUserId) :
                new ObjectParameter("socialMediaUserId", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_RegisterUser", emailParameter, saltParameter, hashedpasswordParameter, networkParameter, socialMediaAccessTokenParameter, socialMediaUserIdParameter, firstnameParameter, userId);
        }
    
        public virtual int pr_AddMovies(string title, string description, string genre, string language, Nullable<System.DateTime> releasedate, string actors)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("genre", genre) :
                new ObjectParameter("genre", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(string));
    
            var releasedateParameter = releasedate.HasValue ?
                new ObjectParameter("releasedate", releasedate) :
                new ObjectParameter("releasedate", typeof(System.DateTime));
    
            var actorsParameter = actors != null ?
                new ObjectParameter("actors", actors) :
                new ObjectParameter("actors", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_AddMovies", titleParameter, descriptionParameter, genreParameter, languageParameter, releasedateParameter, actorsParameter);
        }
    }
}
